// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[0..2], a = p0, b = p1, c = p2, d = p3, e = p4, f = p5, g = p6, h = p7);
    RAM8(in = in, load = p0, address = address[3..5], out = a);
    RAM8(in = in, load = p1, address = address[3..5], out = b);
    RAM8(in = in, load = p2, address = address[3..5], out = c);
    RAM8(in = in, load = p3, address = address[3..5], out = d);
    RAM8(in = in, load = p4, address = address[3..5], out = e);
    RAM8(in = in, load = p5, address = address[3..5], out = f);
    RAM8(in = in, load = p6, address = address[3..5], out = g);
    RAM8(in = in, load = p7, address = address[3..5], out = h);
    Mux8Way16(a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h, sel = address[0..2], out = out);
}